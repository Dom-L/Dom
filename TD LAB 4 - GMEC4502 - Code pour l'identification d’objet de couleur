# Fonction pour aller chercher les fonctions nécessaire
import cv2
import numpy as np

def nothing(x):
    pass
#Partie 1:créer une fenêtre avec des glissière ajustable pour modifié la couleur
cap = cv2.VideoCapture(0) # Débute une vidéo avec le camera sur ton ordinateur
cv2.namedWindow("Trackbars")
#Création de chaque glissiere ainsi que leur position initial
cv2.createTrackbar("L-H","Trackbars", 0, 179, nothing)
cv2.createTrackbar("L-S", "Trackbars", 0, 255, nothing)
cv2.createTrackbar("L-V", "Trackbars", 0, 255, nothing)
cv2.createTrackbar("U-H", "Trackbars", 180, 180, nothing)
cv2.createTrackbar("U-S", "Trackbars", 255, 255, nothing)
cv2.createTrackbar("U-V", "Trackbars", 255, 255, nothing)

# Partie 2: créer une fenêtre du avec le caméra et applique un filtre afin de donner une image plus lisse

while True :

    _, frame = cap.read()
    blurred_frame = cv2.GaussianBlur(frame, (5, 5), 0)
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    l_h = cv2.getTrackbarPos("L-H", "Trackbars")
    l_s = cv2.getTrackbarPos("L-S", "Trackbars")
    l_v = cv2.getTrackbarPos("L-V", "Trackbars")
    u_h = cv2.getTrackbarPos("U-H", "Trackbars")
    u_s = cv2.getTrackbarPos("U-S", "Trackbars")
    u_v = cv2.getTrackbarPos("U-V", "Trackbars")

#Utilise les glissiere pour identifier les couleurs filtrées
    lower_red = np.array([l_h, l_s, l_v])
    upper_red = np.array([u_h, u_s, u_v])
    blue_mask = cv2.inRange(hsv, lower_red, upper_red)
    blue = cv2.bitwise_and(frame, frame, mask=blue_mask) # Ceci va créer un mask sur la fenetre et vont utiliser les glissiere afin de filtrer les couleurs.

 #Cette fonction trouve les contours dans la fenêtre qui filtre les couleurs
    contours, _ = cv2.findContours(blue_mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)

#Affiche seulement un contour qui est plus grand que le treshhold de 1000
    for contour in contours:
        area = cv2.contourArea(contour)

        if area > 1000:
            cv2.drawContours(frame, contour, -1, (0, 255, 0), 3)

#Ouvrir les deux fenetres créer. Une qui affiche les contours et une qui est filtrée par le mask
    cv2.imshow("Frame", frame)
    cv2.imshow("mask", blue)

    key = cv2.waitKey(1)
    if key == 27:
        break

cap.release()
cv2.destroyAllWindows() # ferme tout
